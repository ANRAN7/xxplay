<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxplay.dao.admin.IAdminDao" >
  <resultMap id="BaseResultMap" type="com.xxplay.model.persistent.admin.Admin" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  
  <resultMap id="RoleResultMap" type="com.xxplay.model.persistent.admin.Admin" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_name, password, real_name, create_time, role_id,status
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_admin
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="queryAdminByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select
  	<include refid="Base_Column_List"/>
  	from t_admin
  	where user_name = #{userName}
  </select>
  
  <select id="queryAdminListPage" resultMap="RoleResultMap" parameterType="java.util.Map">
  	select ta.id, ta.user_name, password, real_name, ta.create_time,role_id,ta.status,role_name
	from t_admin ta left join t_role tr on role_id = tr.id 
	<where>
		<if test="userName != null and userName != ''">
			user_name like concat(concat('%',#{userName}),'%')
		</if>
		<if test="realName != null and realName != ''">
			real_name like concat('%',#{realName},'%')
		</if>
	</where>
	order by create_time desc 
	limit #{begin},#{end}
  </select>
  
  <select id="queryAdminCountPage" resultType="java.lang.Integer" parameterType="java.util.Map">
  	select count(*) from t_admin
	<where>
		<if test="userName != null and userName != ''">
			user_name like concat(concat('%',#{userName}),'%')
		</if>
		<if test="realName != null and realName != ''">
			real_name like concat('%',#{realName},'%')
		</if>
	</where>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_admin
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.xxplay.model.persistent.admin.Admin" >
    insert into t_admin (id, user_name, password, 
      real_name, create_time, role_id,status
      )
    values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{roleId,jdbcType=VARCHAR},
      #{status,jdbcType=CHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.xxplay.model.persistent.admin.Admin" >
    insert into t_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.xxplay.model.persistent.admin.Admin" >
    update t_admin
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.xxplay.model.persistent.admin.Admin" >
    update t_admin
      set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>