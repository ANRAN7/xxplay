<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<!-- 扫描所有的service，但是排除Controller，因为Controller在spring-mvc中扫描 -->
	<context:component-scan base-package="com.xxplay">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan> 
	<!-- 加载数据库配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations" value="classpath:env/jdbc.properties" />
  	</bean>
  
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
			init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" /> 
        
		<!-- 初始化连接大小 -->  
        <property name="initialSize" value="${jdbc.initialSize}" />  
        <!-- 连接池最大使用连接数量 -->  
        <property name="maxActive" value="${jdbc.maxActive}" />  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}" />  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${jdbc.maxWait}" />
          
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  
  
        <!-- 打开removeAbandoned功能 -->  
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />  
        <!-- 1800秒，也就是30分钟 -->  
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />  
        <!-- 关闭abanded连接时输出错误日志 -->  
        <property name="logAbandoned" value="${jdbc.logAbandoned}" />  
  
        <!-- 监控数据库 -->  
        <property name="filters" value="${jdbc.filters}" />  
	</bean>

	<!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/xxplay/mapping/**/*.xml"></property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xxplay.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 配置相关事务 -->
	<!-- 配置数据源事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明事务 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	      <tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
	      <tx:method name="remove*" propagation="REQUIRED" read-only="false"/>
	      
	      <tx:method name="add*" propagation="REQUIRED" read-only="false"/>
	      <tx:method name="save*" propagation="REQUIRED"  read-only="false"/>
	      <tx:method name="insert*" propagation="REQUIRED"  read-only="false"/>  
	      
	      <tx:method name="update*" propagation="REQUIRED" read-only="false" />
	      <tx:method name="modify*" propagation="REQUIRED"/>  
          <tx:method name="edit*" propagation="REQUIRED"/>  
            
	      <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
	      <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
	      <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
	      <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
	      <tx:method name="load*" propagation="SUPPORTS"  read-only="true"/>  
	      
	      <tx:method name="*" propagation="SUPPORTS"  read-only="true"/>  
	    </tx:attributes>  
	</tx:advice>  
	
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* com.xxplay.service.*.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
</beans>